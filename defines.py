import os
import pprint as pp

DEV_ID = os.environ['DEV_ID']
TOKEN = os.environ['TOKEN']
HOST_IP = os.environ['HOST_IP']
HOST_PORT = os.environ['HOST_PORT']
DONATOR1 = os.environ['DONATOR1']


##Known donators - for easteregg!##
DONATORS = [
  DONATOR1,
  #DEV_ID #for testing
]

## intervals ##
INTERVAL = 60*60
TRADE_DIS_INTERVALS = 1

##channel / server routing##
ALLOWED_SERVERS = [599153230659846165, 932389256838643755] #kaspa, test

##channels##
TRADE_OFFER_CHANS = [910316340735262720, 934846748491415573] #kaspa, test
DEDICATED_CHANS   = [934815196361404467, 934753516575158282] #kaspa, test

SER_TO_ALLOWED_CHANS = {
  599153230659846165 :{ #kaspa
    DEDICATED_CHANS[0]
  },
  932389256838643755 : [ #test 
    DEDICATED_CHANS[1]
    ]
  }

SER_TO_ANSWER_CHAN = {
  599153230659846165 : DEDICATED_CHANS[0], #kaspa
  932389256838643755 : DEDICATED_CHANS[1], #test 
}

##for kaspa backend##
TRY_DEDICATED_NODE = True

CALL_FOR_DONATION_PROB = 1/20 # more reduction 

##channels##
TRADE_OFFER_CHAN = 910316340735262720
DEVFUND_CHAN = 922204606946234398

class kaspa_constants:
  TOTAL_COIN_SUPPLY = 28_376_242_397
  INFLATIONARY_SUPPLY = 15519600*500
  DEFLATIONARY_TABLE = {0: 500.0, 15519600: 440.0, 18149400: 415.30469757, 20779200: 391.99543598, 23409000: 369.99442271, 26038800: 349.22823143, 28668600: 329.62755691, 31298400: 311.12698372, 33928200: 293.66476791, 36558000: 277.18263097, 39187800: 261.6255653, 41817600: 246.94165062, 44447400: 233.08188075, 47077200: 220.0, 49707000: 207.65234878, 52336800: 195.99771799, 54966600: 184.99721135, 57596400: 174.61411571, 60226200: 164.81377845, 62856000: 155.56349186, 65485800: 146.83238395, 68115600: 138.59131548, 70745400: 130.81278265, 73375200: 123.47082531, 76005000: 116.54094037, 78634800: 110.0, 81264600: 103.82617439, 83894400: 97.99885899, 86524200: 92.49860567, 89154000: 87.30705785, 91783800: 82.40688922, 94413600: 77.78174593, 97043400: 73.41619197, 99673200: 69.29565774, 102303000: 65.40639132, 104932800: 61.73541265, 107562600: 58.27047018, 110192400: 55.0, 112822200: 51.91308719, 115452000: 48.99942949, 118081800: 46.24930283, 120711600: 43.65352892, 123341400: 41.20344461, 125971200: 38.89087296, 128601000: 36.70809598, 131230800: 34.64782887, 133860600: 32.70319566, 136490400: 30.86770632, 139120200: 29.13523509, 141750000: 27.5, 144379800: 25.95654359, 147009600: 24.49971474, 149639400: 23.12465141, 152269200: 21.82676446, 154899000: 20.6017223, 157528800: 19.44543648, 160158600: 18.35404799, 162788400: 17.32391443, 165418200: 16.35159783, 168048000: 15.43385316, 170677800: 14.56761754, 173307600: 13.75, 175937400: 12.97827179, 178567200: 12.24985737, 181197000: 11.5623257, 183826800: 10.91338223, 186456600: 10.30086115, 189086400: 9.72271824, 191716200: 9.17702399, 194346000: 8.66195721, 196975800: 8.17579891, 199605600: 7.71692658, 202235400: 7.28380877, 204865200: 6.875, 207495000: 6.48913589, 210124800: 6.12492868, 212754600: 5.78116285, 215384400: 5.45669111, 218014200: 5.15043057, 220644000: 4.86135912, 223273800: 4.58851199, 225903600: 4.3309786, 228533400: 4.08789945, 231163200: 3.85846329, 233793000: 3.64190438, 236422800: 3.4375, 239052600: 3.24456794, 241682400: 3.06246434, 244312200: 2.89058142, 246942000: 2.72834555, 249571800: 2.57521528, 252201600: 2.43067956, 254831400: 2.29425599, 257461200: 2.1654893, 260091000: 2.04394972, 262720800: 1.92923164, 265350600: 1.82095219, 267980400: 1.71875, 270610200: 1.62228397, 273240000: 1.53123217, 275869800: 1.44529071, 278499600: 1.36417277, 281129400: 1.28760764, 283759200: 1.21533978, 286389000: 1.14712799, 289018800: 1.08274465, 291648600: 1.02197486, 294278400: 0.96461582, 296908200: 0.91047609, 299538000: 0.859375, 302167800: 0.81114198, 304797600: 0.76561608, 307427400: 0.72264535, 310057200: 0.68208638, 312687000: 0.64380382, 315316800: 0.60766989, 317946600: 0.57356399, 320576400: 0.54137232, 323206200: 0.51098743, 325836000: 0.48230791, 328465800: 0.45523804, 331095600: 0.4296875, 333725400: 0.40557099, 336355200: 0.38280804, 338985000: 0.36132267, 341614800: 0.34104319, 344244600: 0.32190191, 346874400: 0.30383494, 349504200: 0.28678199, 352134000: 0.27068616, 354763800: 0.25549371, 357393600: 0.24115395, 360023400: 0.22761902, 362653200: 0.21484375, 365283000: 0.20278549, 367912800: 0.19140402, 370542600: 0.18066133, 373172400: 0.17052159, 375802200: 0.16095095, 378432000: 0.15191747, 381061800: 0.14339099, 383691600: 0.13534308, 386321400: 0.12774685, 388951200: 0.12057697, 391581000: 0.11380951, 394210800: 0.10742187, 396840600: 0.10139274, 399470400: 0.09570201, 402100200: 0.09033066, 404730000: 0.08526079, 407359800: 0.08047547, 409989600: 0.07595873, 412619400: 0.07169549, 415249200: 0.06767154, 417879000: 0.06387342, 420508800: 0.06028848, 423138600: 0.05690475, 425768400: 0.05371093, 428398200: 0.05069637, 431028000: 0.047851, 433657800: 0.04516533, 436287600: 0.04263039, 438917400: 0.04023773, 441547200: 0.03797936, 444177000: 0.03584774, 446806800: 0.03383577, 449436600: 0.03193671, 452066400: 0.03014424, 454696200: 0.02845237, 457326000: 0.02685546, 459955800: 0.02534818, 462585600: 0.0239255, 465215400: 0.02258266, 467845200: 0.02131519, 470475000: 0.02011886, 473104800: 0.01898968, 475734600: 0.01792387, 478364400: 0.01691788, 480994200: 0.01596835, 483624000: 0.01507212, 486253800: 0.01422618, 488883600: 0.01342773, 491513400: 0.01267409, 494143200: 0.01196275, 496773000: 0.01129133, 499402800: 0.01065759, 502032600: 0.01005943, 504662400: 0.00949484, 507292200: 0.00896193, 509922000: 0.00845894, 512551800: 0.00798417, 515181600: 0.00753606, 517811400: 0.00711309, 520441200: 0.00671386, 523071000: 0.00633704, 525700800: 0.00598137, 528330600: 0.00564566, 530960400: 0.00532879, 533590200: 0.00502971, 536220000: 0.00474742, 538849800: 0.00448096, 541479600: 0.00422947, 544109400: 0.00399208, 546739200: 0.00376803, 549369000: 0.00355654, 551998800: 0.00335693, 554628600: 0.00316852, 557258400: 0.00299068, 559888200: 0.00282283, 562518000: 0.00266439, 565147800: 0.00251485, 567777600: 0.00237371, 570407400: 0.00224048, 573037200: 0.00211473, 575667000: 0.00199604, 578296800: 0.00188401, 580926600: 0.00177827, 583556400: 0.00167846, 586186200: 0.00158426, 588816000: 0.00149534, 591445800: 0.00141141, 594075600: 0.00133219, 596705400: 0.00125742, 599335200: 0.00118685, 601965000: 0.00112024, 604594800: 0.00105736, 607224600: 0.00099802, 609854400: 0.000942, 612484200: 0.00088913, 615114000: 0.00083923, 617743800: 0.00079213, 620373600: 0.00074767, 623003400: 0.0007057, 625633200: 0.00066609, 628263000: 0.00062871, 630892800: 0.00059342, 633522600: 0.00056012, 636152400: 0.00052868, 638782200: 0.00049901, 641412000: 0.000471, 644041800: 0.00044456, 646671600: 0.00041961, 649301400: 0.00039606, 651931200: 0.00037383, 654561000: 0.00035285, 657190800: 0.00033304, 659820600: 0.00031435, 662450400: 0.00029671, 665080200: 0.00028006, 667710000: 0.00026434, 670339800: 0.0002495, 672969600: 0.0002355, 675599400: 0.00022228, 678229200: 0.0002098, 680859000: 0.00019803, 683488800: 0.00018691, 686118600: 0.00017642, 688748400: 0.00016652, 691378200: 0.00015717, 694008000: 0.00014835, 696637800: 0.00014003, 699267600: 0.00013217, 701897400: 0.00012475, 704527200: 0.00011775, 707157000: 0.00011114, 709786800: 0.0001049, 712416600: 9.901e-05, 715046400: 9.345e-05, 717676200: 8.821e-05, 720306000: 8.326e-05, 722935800: 7.858e-05, 725565600: 7.417e-05, 728195400: 7.001e-05, 730825200: 6.608e-05, 733455000: 6.237e-05, 736084800: 5.887e-05, 738714600: 5.557e-05, 741344400: 5.245e-05, 743974200: 4.95e-05, 746604000: 4.672e-05, 749233800: 4.41e-05, 751863600: 4.163e-05, 754493400: 3.929e-05, 757123200: 3.708e-05, 759753000: 3.5e-05, 762382800: 3.304e-05, 765012600: 3.118e-05, 767642400: 2.943e-05, 770272200: 2.778e-05, 772902000: 2.622e-05, 775531800: 2.475e-05, 778161600: 2.336e-05, 780791400: 2.205e-05, 783421200: 2.081e-05, 786051000: 1.964e-05, 788680800: 1.854e-05, 791310600: 1.75e-05, 793940400: 1.652e-05, 796570200: 1.559e-05, 799200000: 1.471e-05, 801829800: 1.389e-05, 804459600: 1.311e-05, 807089400: 1.237e-05, 809719200: 1.168e-05, 812349000: 1.102e-05, 814978800: 1.04e-05, 817608600: 9.82e-06, 820238400: 9.27e-06, 822868200: 8.75e-06, 825498000: 8.26e-06, 828127800: 7.79e-06, 830757600: 7.35e-06, 833387400: 6.94e-06, 836017200: 6.55e-06, 838647000: 6.18e-06, 841276800: 5.84e-06, 843906600: 5.51e-06, 846536400: 5.2e-06, 849166200: 4.91e-06, 851796000: 4.63e-06, 854425800: 4.37e-06, 857055600: 4.13e-06, 859685400: 3.89e-06, 862315200: 3.67e-06, 864945000: 3.47e-06, 867574800: 3.27e-06, 870204600: 3.09e-06, 872834400: 2.92e-06, 875464200: 2.75e-06, 878094000: 2.6e-06, 880723800: 2.45e-06, 883353600: 2.31e-06, 885983400: 2.18e-06, 888613200: 2.06e-06, 891243000: 1.94e-06, 893872800: 1.83e-06, 896502600: 1.73e-06, 899132400: 1.63e-06, 901762200: 1.54e-06, 904392000: 1.46e-06, 907021800: 1.37e-06, 909651600: 1.3e-06, 912281400: 1.22e-06, 914911200: 1.15e-06, 917541000: 1.09e-06, 920170800: 1.03e-06, 922800600: 9.7e-07, 925430400: 9.1e-07, 928060200: 8.6e-07, 930690000: 8.1e-07, 933319800: 7.7e-07, 935949600: 7.3e-07, 938579400: 6.8e-07, 941209200: 6.5e-07, 943839000: 6.1e-07, 946468800: 5.7e-07, 949098600: 5.4e-07, 951728400: 5.1e-07, 954358200: 4.8e-07, 956988000: 4.5e-07, 959617800: 4.3e-07, 962247600: 4e-07, 964877400: 3.8e-07, 967507200: 3.6e-07, 970137000: 3.4e-07, 972766800: 3.2e-07, 975396600: 3e-07, 978026400: 2.8e-07, 980656200: 2.7e-07, 983286000: 2.5e-07, 985915800: 2.4e-07, 988545600: 2.2e-07, 991175400: 2.1e-07, 993805200: 2e-07, 996435000: 1.9e-07, 999064800: 1.8e-07, 1001694600: 1.7e-07, 1004324400: 1.6e-07, 1006954200: 1.5e-07, 1009584000: 1.4e-07, 1012213800: 1.3e-07, 1014843600: 1.2e-07, 1017473400: 1.2e-07, 1020103200: 1.1e-07, 1022733000: 1e-07, 1025362800: 1e-07, 1027992600: 9e-08, 1030622400: 9e-08, 1033252200: 8e-08, 1035882000: 8e-08, 1038511800: 7e-08, 1041141600: 7e-08, 1043771400: 6e-08, 1046401200: 6e-08, 1049031000: 6e-08, 1051660800: 5e-08, 1054290600: 5e-08, 1056920400: 5e-08, 1059550200: 4e-08, 1062180000: 4e-08, 1064809800: 4e-08, 1067439600: 4e-08, 1070069400: 3e-08, 1072699200: 3e-08, 1075329000: 3e-08, 1077958800: 3e-08, 1080588600: 3e-08, 1083218400: 2e-08, 1085848200: 2e-08, 1088478000: 2e-08, 1091107800: 2e-08, 1093737600: 2e-08, 1096367400: 2e-08, 1098997200: 2e-08, 1101627000: 1e-08, 1104256800: 1e-08, 1106886600: 1e-08, 1109516400: 1e-08, 1112146200: 1e-08, 1114776000: 1e-08, 1117405800: 1e-08, 1120035600: 1e-08, 1122665400: 1e-08, 1125295200: 1e-08, 1127925000: 1e-08, 1130554800: 1e-08, 1133184600: 0.0} #{daa_score_start : mining reward}

class devfund_addresses:
    MINING_ADDR = 'kaspa:pzhh76qc82wzduvsrd9xh4zde9qhp0xc8rl7qu2mvl2e42uvdqt75zrcgpm00'
    DONATION_ADDR = 'kaspa:precqv0krj3r6uyyfa36ga7s0u9jct0v4wg8ctsfde2gkrsgwgw8jgxfzfc98'

class kasper_addresses:
    DONATION_ADDR = 'kaspa:qp33anhdnnsfzg474jd3s5csuaf0k9kn6cvy3pfcx9rnezak5qkhgskuztcum'

class answers:
    DISCLAIMER = '''Disclaimer:
  
  This is a kind reminder that #trade channel is not moderated by the server mods, core devs, treasurers or any other constituents of the Kaspa community. This channel was created to accommodate traders which bogged down the community channel, having created it does not impose any responsibility for the actions of any buyer, seller, escrow service etc. on any particular community member. Please be mindful of that and careful with your money.'''

    FAILED = lambda recv_msg : f'''
  Could not process: {recv_msg}'''

    SUCCESS = f'''SUCCESS''' # for test command

    DAG_STATS =lambda stats : f'''{pp.pformat(stats)}'''

    COIN_STATS = lambda circulating_coins : f'''
    Circulating supply  : {circulating_coins:,}
    Total supply        : {kaspa_constants.TOTAL_COIN_SUPPLY:,}
    Percent mined       : {round(circulating_coins/kaspa_constants.TOTAL_COIN_SUPPLY*100, 2)}%'''
    
    DEVFUND = lambda mining_addr_value, donation_addr_value : f'''
  =======================================================================
  Donation addresses:

    • {devfund_addresses.DONATION_ADDR}

  -----------------------------------------------------------------------
    Amount: {int(donation_addr_value):,} KAS 
  =======================================================================
  Mining addresses:

    • {devfund_addresses.MINING_ADDR}
    
  -----------------------------------------------------------------------
    Amount: {int(mining_addr_value):,} KAS
  =======================================================================
  TOTAL:    {int(mining_addr_value + donation_addr_value):,} KAS'''

    BALANCE = lambda balance : f'''
    {balance:,} KAS'''

    SUGGESTION = f'''
    Thanks for your suggestion!'''

    HASHRATE = lambda norm_hashrate : f'''
    Hashrate: {norm_hashrate}''' 
    
    CONSIDER_DONATION = f'''
    Please consider a donation:
    Kasper : {kasper_addresses.DONATION_ADDR}
    Devfund: {devfund_addresses.DONATION_ADDR}
    '''

    USEFUL_LINKS = '''
  Kaspa website: 
    https://kaspanet.org/
  Source code: 
    https://github.com/kaspanet/kaspad
  Quick start guide:
    tinyurl.com/ym8sbas7
  Node bootstrap:
    http://kaspadbase.com/
  Kaspa Wiki:
    https://kaspawiki.net/
  Kaspa for desktop (KDX):
    https://kdx.app/
  Web wallet:
    https://wallet.kaspanet.io/
  Paper wallet generator:
    https://github.com/svarogg/kaspaper/releases/latest 
  Faucet:
    https://faucet.kaspanet.io/
  Dashboards:
    http://kasboard-mainnet.daglabs-dev.com/
    http://kasboard.cbytensky.org/
  Livefeed:
    http://kgi-mainnet.daglabs-dev.com/
  Block explorers:
    http://katnip.cbytensky.org/
    http://blockexplorer.kaspanet.org/
  Cpu-miner:
    https://github.com/elichai/kaspa-miner/releases
  Gpu-miner:
    https://github.com/tmrlvi/kaspa-miner/releases'''

    MINING_CALC = lambda network_percent : f'''
  KAS / sec   :  {500*network_percent:,}
  KAS / min   :  {round(500*60*network_percent):,}
  KAS / hour  :  {round(500*60*60*network_percent):,}
  KAS / day   :  {round(500*60*60*24*network_percent):,}
  KAS / week  :  {round(500*60*60*24*7*network_percent):,}
  KAS / month :  {round(500*60*60*24*(365.25/12)*network_percent):,}
  KAS / year  :  {round(500*60*60*24*365.25*network_percent):,}'''

    DONATION_ADDRS = f'''
  Please consider a donation:
  • Kasperbot: 
    {kasper_addresses.DONATION_ADDR}
  • Devfund  : 
    {devfund_addresses.DONATION_ADDR}'''